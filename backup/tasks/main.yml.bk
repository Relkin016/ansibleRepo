- name: Create backup dir
  file:
    path: "{{ backup_dir }}"
    state: directory
    mode: '0755'
    owner: roman

- name: Add backup role
  community.mysql.mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        host: "localhost"
        priv: "*.*:SELECT/INSERT/UPDATE/DELETE"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
    register: bckp_rl

- name: Get FULL access to backup usr
    community.mysql.mysql_query:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      query: "GRANT PROCESS, RELOAD ON *.* TO '{{ backup_user }}'@'localhost';"
    when: bckp_rl.changed or bckp_rl.exists

- name: Flush privs
    community.mysql.mysql_query:
      login_user: root
      login_password: "{{ mysql_root_password }}
      query: "FLUSH PRIVILEGES;"

- name: Add Time ENV VAR
  cron:
    name: BACKUP_NAME
    user: roman
    env: yes
    job: "{{ backup_dir }}/mysql_backup_${TIMESTAMP}.sql"

- name: Add Time ENV VAR
  ansible.builtin.cron:
    name: TIMESTAMP
    user: roman
    env: yes
    job: ${date +%Y%m%d_%H%M%S}

- name: Add a daily backup cron job
  cron:
    name: Daily Backup Script
    user: roman
    minute: 0
    hour: 3
    job: "mysqldump -u {{ mysql_user }} -p{{ mysql_password }} --all-databases > ${BACKUP_NAME} && scp ${BACKUP_NAME} user@192.168.12.41:${BACKUP_NAME}"
    state: present

- name: Add old backups autoremoving
  cron:
    user: roman
    name: "Autoremove old backups"
    minute: 0
    hour: 3
    job: "find {{ backup_dir }}/* -type f -mtime +7 -delete"
